;CURSOR MACRO ROW,COL---------------------------------------
CURSOR MACRO ROW,COL
	MOV AH,02H
	MOV BH,00H ;page number 0
	MOV DH,ROW
	MOV DL,COL
	INT 10H
	ENDM
;-----------------------------------------------------------
;PRINTT MACRO ROW,COL---------------------------------------
PRINTT MACRO ROW,COL
	CURSOR ROW,COL
	DISPLAYS T0
	CURSOR ROW+1,COL
	DISPLAYS T1
	CURSOR ROW+2,COL
	DISPLAYS T2
	CURSOR ROW+3,COL
	DISPLAYS T3
	CURSOR ROW+4,COL
	DISPLAYS T4
	CURSOR ROW+5,COL
	DISPLAYS T5
	CURSOR ROW+6,COL
	DISPLAYS T6
	CURSOR ROW+7,COL
	DISPLAYS T7
	CURSOR ROW+8,COL
	DISPLAYS T8
	CURSOR ROW+9,COL
	DISPLAYS T9
	ENDM
;----------------------------------------------------------
;PRINTI MACRO ROW,COL---------------------------------------
PRINTI MACRO ROW,COL
	CURSOR ROW,COL
	DISPLAYS I0
	CURSOR ROW+1,COL
	DISPLAYS I1
	CURSOR ROW+2,COL
	DISPLAYS I2
	CURSOR ROW+3,COL
	DISPLAYS I3
	CURSOR ROW+4,COL
	DISPLAYS I4
	CURSOR ROW+5,COL
	DISPLAYS I5
	CURSOR ROW+6,COL
	DISPLAYS I6
	CURSOR ROW+7,COL
	DISPLAYS I7
	CURSOR ROW+8,COL
	DISPLAYS I8
	CURSOR ROW+9,COL
	DISPLAYS I9
	ENDM
;----------------------------------------------------------
;PRINTC MACRO ROW,COL---------------------------------------
PRINTC MACRO ROW,COL
	CURSOR ROW,COL
	DISPLAYS C0
	CURSOR ROW+1,COL
	DISPLAYS C1
	CURSOR ROW+2,COL
	DISPLAYS C2
	CURSOR ROW+3,COL
	DISPLAYS C3
	CURSOR ROW+4,COL
	DISPLAYS C4
	CURSOR ROW+5,COL
	DISPLAYS C5
	CURSOR ROW+6,COL
	DISPLAYS C6
	CURSOR ROW+7,COL
	DISPLAYS C7
	CURSOR ROW+8,COL
	DISPLAYS C8
	CURSOR ROW+9,COL
	DISPLAYS C9
	ENDM
;-----------------------------------------------------------
;PRINTC MACRO ROW,COL---------------------------------------
PRINTA MACRO ROW,COL
	CURSOR ROW,COL
	DISPLAYS A0
	CURSOR ROW+1,COL
	DISPLAYS A1
	CURSOR ROW+2,COL
	DISPLAYS A2
	CURSOR ROW+3,COL
	DISPLAYS A3
	CURSOR ROW+4,COL
	DISPLAYS A4
	CURSOR ROW+5,COL
	DISPLAYS A5
	CURSOR ROW+6,COL
	DISPLAYS A6
	CURSOR ROW+7,COL
	DISPLAYS A7
	CURSOR ROW+8,COL
	DISPLAYS A8
	CURSOR ROW+9,COL
	DISPLAYS A9
	ENDM
;----------------------------------------------------------
;PRINTC MACRO ROW,COL---------------------------------------
PRINTO MACRO ROW,COL
	CURSOR ROW,COL
	DISPLAYS O0
	CURSOR ROW+1,COL
	DISPLAYS O1
	CURSOR ROW+2,COL
	DISPLAYS O2
	CURSOR ROW+3,COL
	DISPLAYS O3
	CURSOR ROW+4,COL
	DISPLAYS O4
	CURSOR ROW+5,COL
	DISPLAYS O5
	CURSOR ROW+6,COL
	DISPLAYS O6
	CURSOR ROW+7,COL
	DISPLAYS O7
	CURSOR ROW+8,COL
	DISPLAYS O8
	CURSOR ROW+9,COL
	DISPLAYS O9
	ENDM
;----------------------------------------------------------
;PRINTC MACRO ROW,COL---------------------------------------
PRINTE MACRO ROW,COL
	CURSOR ROW,COL
	DISPLAYS E0
	CURSOR ROW+1,COL
	DISPLAYS E1
	CURSOR ROW+2,COL
	DISPLAYS E2
	CURSOR ROW+3,COL
	DISPLAYS E3
	CURSOR ROW+4,COL
	DISPLAYS E4
	CURSOR ROW+5,COL
	DISPLAYS E5
	CURSOR ROW+6,COL
	DISPLAYS E6
	CURSOR ROW+7,COL
	DISPLAYS E7
	CURSOR ROW+8,COL
	DISPLAYS E8
	CURSOR ROW+9,COL
	DISPLAYS E9
	ENDM
;----------------------------------------------------------
;DISPLAY STRING MACRO---------------------------------------
DISPLAYS MACRO STRING
	MOV AH,09H
	MOV DX,OFFSET STRING
	INT 21H
	ENDM
;-----------------------------------------------------------
;CHOOSECOLOR------------------------------------------------
CHOOSECOLOR MACRO ROWS,COLS,ROWE,COLE,COLOR,PLAYER
LOCAL NOTINSIDE1,P1CHOOSE
	MOV AX,PLAYER
	CMP CX,COLS
	JB NOTINSIDE1

	CMP CX,COLE
	JA NOTINSIDE1

	CMP DX,ROWS
	JB NOTINSIDE1

	CMP DX,ROWE
	JA NOTINSIDE1
	CMP AX,1
	JE P1CHOOSE
	MOV PLAYER2,COLOR
	JMP NOTINSIDE1
	P1CHOOSE:
	MOV PLAYER1,COLOR
	
NOTINSIDE1:
ENDM
;----------------------------------------------------------	
;ITERATECHECK----------------------------------------------
ITERATECHECK MACRO NUM1,NUM2,NUM3,ADDRESS
LOCAL REPEAT1,REPEAT2,REPEAT3,NEXT1,NEXT2,NEXT3,QUIT,PLAYER1WINS
MOV DI,0
MOV AL,NUM1
MOV BX,ADDRESS
REPEAT1:
INC DI
CMP DS:[BX+DI],AL
JE NEXT1
CMP DI,9
JB REPEAT1
JMP QUIT

NEXT1:
MOV DI,0
MOV AL,NUM2
REPEAT2:
INC DI
CMP DS:[BX+DI],AL
JE NEXT2
CMP DI,9
JB REPEAT2
JE QUIT

NEXT2:
MOV DI,0
MOV AL,NUM1
REPEAT3:
INC DI
CMP DS:[BX+DI],AL
JE NEXT3
CMP DI,9
JB REPEAT3
JMP QUIT

NEXT3:
CMP BX,1000
JE PLAYER1WINS
CALL CLEAR
CURSOR 15 30		
DISPLAYS MESSAGE8
mov ah,10h ;wait for input
int 16h
JMP QUIT
PLAYER1WINS:
CALL CLEAR
CURSOR 15 30
DISPLAYS MESSAGE7
mov ah,10h ;wait for input
int 16h
QUIT:
ENDM
;---------------------------------------------------------

;CHECKWINNER----------------------------------------------
CHECKWINNER MACRO
ITERATECHECK 1 2 3 1000
ITERATECHECK 1 5 9 1000
ITERATECHECK 1 4 7 1000
ITERATECHECK 2 5 8 1000
ITERATECHECK 3 6 9 1000
ITERATECHECK 4 5 6 1000
ITERATECHECK 7 8 9 1000
ITERATECHECK 1 2 3 2000
ITERATECHECK 1 5 9 2000
ITERATECHECK 1 4 7 2000
ITERATECHECK 2 5 8 2000
ITERATECHECK 3 6 9 2000
ITERATECHECK 4 5 6 2000
ITERATECHECK 7 8 9 2000
ENDM
;------------------------------------------------------

GRIDCLICKED MACRO ROWS,COLS,ROWE,COLE,PLAYER,NUMBER
LOCAL NOTINSIDE,INSIDE,P1,P2
	CMP CX,COLS
	JB NOTINSIDE

	CMP CX,COLE
	JA NOTINSIDE

	CMP DX,ROWS
	JB NOTINSIDE

	CMP DX,ROWE
	JA NOTINSIDE

	FILL ROWS COLS ROWE COLE PLAYER
	CMP PLAYER, 1
	JE P1
	CMP PLAYER, 2
	JE P2
	
	P1:
	MOV DS:[1000+P1MOVES],NUMBER
	INC P1MOVES
	JMP NOTINSIDE
	
	P2:
	MOV DS:[2000+P2MOVES],NUMBER
	INC P2MOVES
	JMP NOTINSIDE
NOTINSIDE:
ENDM
;----------------------------------------------------------
CLICKED MACRO ROWS,COLS,ROWE,COLE,CALLFUNC
LOCAL NOTINSIDE,INSIDE
	CMP CX,COLS
	JB NOTINSIDE

	CMP CX,COLE
	JA NOTINSIDE

	CMP DX,ROWS
	JB NOTINSIDE

	CMP DX,ROWE
	JA NOTINSIDE

	CALL CALLFUNC
	JMP START
NOTINSIDE:
ENDM
;----------------------------------------------------------	
;FILL MACRO ROWS,COLS,ROWE,COLE,COLOR-----------------------
FILL MACRO ROWS,COLS,ROWE,COLE,COLOR
	LOCAL START,AGAIN
	MOV DX,ROWS
START:	MOV CX,COLS
AGAIN:	MOV AH,0CH
	MOV AL,COLOR
	INT 10H
	INC CX
	CMP CX,COLE
	JNE AGAIN
	INC DX
	CMP DX,ROWE
	JNE START
	ENDM
;-----------------------------------------------------------
;CLEARSCREEN----------------------------------------------
CLEARSCREEN MACRO
	MOV AX,0600H	;CLEAR SCREEN
	MOV BH,00H
	MOV CX,0000H
	MOV DX,1E4FH
	INT 10H
	ENDM
;-----------------------------------------------------------

.MODEL SMALL
.STACK 64
.DATA

T0 db '***************************$'
T1 DB '***************************$'
T2 DB '          *******          $'
T3 DB '          *******          $'
T4 DB '          *******          $'
T5 DB '          *******          $'
T6 DB '          *******          $'
T7 DB '          *******          $'
T8 DB '          *******          $'
T9 DB '          *******          $'

I0 DB '***************************$'
I1 DB '***************************$'
I2 DB '          *******          $'
I3 DB '          *******          $'
I4 DB '          *******          $'
I5 DB '          *******          $'
I6 DB '          *******          $'
I7 DB '          *******          $'
I8 DB '***************************$'
I9 DB '***************************$'

C0 DB '        **********         $'
C1 DB '      **************       $'
C2 DB '    ****          ****     $'
C3 DB '  ****              ****   $'
C4 DB '  ****              ****   $'
C5 DB '  ****                     $'
C6 DB '  ****                     $'
C7 DB '    ****            ****   $'
C8 DB '     *****************     $'
C9 DB '        **********         $'   

A0 DB '        **********         $'
A1 DB '      **************       $'
A2 DB '    ****          ****     $'
A3 DB '  ****              ****   $'
A4 DB '****                   ****$'
A5 DB '***************************$'
A6 DB '***************************$'
A7 DB '****                   ****$'
A8 DB '****                   ****$'
A9 DB '****                   ****$'

O0 DB '      **************       $'
O1 DB '    ******************     $'
O2 DB '   ****            ****    $' 
O3 DB '  ****              ****   $'
O4 DB ' ****                ****  $'
O5 DB ' ***                  ***  $'
O6 DB ' ****                ****  $'
O7 DB '  ****              ****   $'
O8 DB '    ******************     $'
O9 DB '       ***********         $'

E0 DB '*************************$'
E1 DB '*************************$'
E2 DB '****                     $'
E3 DB '****                     $'
E4 DB '************************ $'
E5 DB '************************ $'
E6 DB '****                     $'
E7 DB '****                     $'
E8 DB '*************************$'
E9 DB '*************************$'

MESSAGE0 DB 'TIC-TAC-TOE GAME!$'
MESSAGE1 DB 'LET`S PLAY 1 VS 1!$'
MESSAGE2 DB 'EXIT GAME$'
MESSAGE3 DB 'CHOOSE COLOR FOR PLAYER 1$'
MESSAGE4 DB 'CHOOSE COLOR FOR PLAYER 2$'
MESSAGE5 DB 'PLAYER 1 TURN$'
MESSAGE6 DB 'PLAYER 2 TURN$'
MESSAGE7 DB 'PLAYER 1 WINS$'
MESSAGE8 DB 'PLAYER 2 WINS$'
MESSAGE9 DB 'THE GAME IS DRAW!$'
OLDVID DB ?
NEWVID DB 12H
TURN DB ?
PLAYER1 DB ?
PLAYER2 DB ?
P1MOVES DB 1
P2MOVES DB 1
.CODE
MAIN PROC FAR
	MOV AX,@DATA
	MOV DS,AX
	MOV AH,0FH	;CURRENT VIDEO MODE
	INT 10H

	MOV OLDVID,AL	;SAVE IT
START:
	MOV AX,0600H	;CLEAR SCREEN
	MOV BH,07H
	MOV CX,0000H
	MOV DX,184FH
	INT 10H
	MOV P1MOVES,1
	MOV P2MOVES,1
	MOV AH,00H	;SET NEW VIDEO MODE
	MOV AL,NEWVID
	INT 10H
	CALL INTRO
	CURSOR 1 33
	DISPLAYS MESSAGE0
	CURSOR 0,0	;HORIZONTAL LINES
	FILL 50,250,150,400,4	
	CURSOR 6,32
	DISPLAYS MESSAGE1

	CURSOR 0,0
	FILL 200,250,300,400,4	;VERTICAL LINES
	CURSOR 15,36
	DISPLAYS MESSAGE2
	
	MOV AX,0000H	;INITIALIZE MOUSE
	INT 33H

	MOV AX,01H	;SHOW MOUSE CURSOR
	INT 33H

	AGAIN:	MOV AX,03H	;GET MOUSE LOCATION
	INT 33H

	CMP BX,0001H	;CHECK IF LEFT BUTTON IS PRESSED
	JNE AGAIN
	
	CLICKED 50,250,150,400,GAME
    CLICKED 200,250,300,400,EXIT
	
main endp
EXIT PROC NEAR
	MOV AX,0600H	;CLEAR SCREEN
	MOV BH,00H
	MOV CX,0000H
	MOV DX,1E4FH
	INT 10H
	MOV AH,4CH
	INT 21H
	RET
EXIT ENDP

GAME PROC NEAR
	MOV AX,0600H	;CLEAR SCREEN
	MOV BH,00H
	MOV CX,0000H
	MOV DX,1E4FH
	INT 10H
	MOV DI,0;RESETTING THE VALUE OF THE ADDRESS FOR MOVES
	MOV SI,0
	REP2:
	INC SI
	MOV DS:[1000+SI],DI
	CMP SI,9
	JB REP2
	MOV SI,0
	REP1:
	INC SI
	MOV DS:[2000+SI],DI
	CMP SI,9
	JB REP1
	MOV TURN,1
	CURSOR 10 25
	DISPLAYS MESSAGE3
	CALL DELAY
	CALL CLEAR
	CALL DISPLAYCHOICES
	AGAIN1:	MOV AX,03H	;GET MOUSE LOCATION
	INT 33H

	CMP BX,0001H	;CHECK IF LEFT BUTTON IS PRESSED
	JNE AGAIN1
	
	CHOOSECOLOR 50 10 250 310 1 1
	CHOOSECOLOR 270 10 470 310 2 1
	CHOOSECOLOR 50 330 250 630 3 1
	CHOOSECOLOR 270 330 470 630 4 1
	
	CALL CLEAR
	CURSOR 10 25
	DISPLAYS MESSAGE4
	CALL DELAY
	CALL CLEAR
	CALL DISPLAYCHOICES
	AGAIN2:	MOV AX,03H	;GET MOUSE LOCATION
	INT 33H
	CMP BX,0001H	;CHECK IF LEFT BUTTON IS PRESSED
	JNE AGAIN2

	CHOOSECOLOR 50 10 250 310 1 2
	CHOOSECOLOR 270 10 470 310 2 2
	CHOOSECOLOR 50 330 250 630 3 2
	CHOOSECOLOR 270 330 470 630 4 2
	CALL CLEAR
	CALL DISPLAYGRID
	CURSOR 1 10
	DISPLAYS MESSAGE5
	NOWINNER:
	AGAIN3:	MOV AX,03H	;GET MOUSE LOCATION
	INT 33H
	CMP BX,0001H	;CHECK IF LEFT BUTTON IS PRESSED
	JNE AGAIN3
	GRIDCLICKED 53 53 180 230 TURN,1
	GRIDCLICKED 53 233 180 413 TURN,2
	GRIDCLICKED 53 416 180 596 TURN,3
	GRIDCLICKED 183 53 313 230 TURN,4
	GRIDCLICKED 183 233 313 413 TURN,5
	GRIDCLICKED 183 416 313 596 TURN,6
	GRIDCLICKED 316 53 446 230 TURN,7
	GRIDCLICKED 316 233 446 413 TURN,8
	GRIDCLICKED 316 416 446 596 TURN,9
	CHECKWINNER
	CMP P1MOVES,6
	JE DRAW
	CMP TURN, 1;PLAYERS ALTERNATES TURNS
	JE SWITCHTO2
	CMP TURN, 2
	JE SWITCHTO1
	
	SWITCHTO1:
	MOV TURN,1
	CURSOR 1 10
	DISPLAYS MESSAGE5
	JMP NOWINNER
	SWITCHTO2:
	CURSOR 1 10
	DISPLAYS MESSAGE6
	MOV TURN, 2
	JMP NOWINNER
	DRAW:
	CALL DELAY
	CALL CLEAR
	CURSOR 15 30
	DISPLAYS MESSAGE9
	mov ah,10h ;wait for input
	int 16h
	JMP START
	RET
GAME ENDP

DISPLAYCHOICES PROC NEAR
	FILL 50 10 250 310 1
	FILL 270 10 470 310 2
	FILL 50 330 250 630 3
	FILL 270 330 470 630 4
	RET
DISPLAYCHOICES ENDP
DISPLAYGRID PROC NEAR
FILL 50 50 450 600 6
	
	FILL 53 53 180 230 7
	FILL 53 233 180 413 7
	FILL 53 416 180 596 7
	
	FILL 183 53 313 230 7
	FILL 183 233 313 413 7
	FILL 183 416 313 596 7
	
	FILL 316 53 446 230 7
	FILL 316 233 446 413 7
	FILL 316 416 446 596 7
	
	RET
DISPLAYGRID ENDP
DELAY PROC NEAR
MOV CX,9FFFH
LOOP1:
	MOV DX,0200H
	DEC CX
	LOOP2:
	CMP DX,1
	DEC DX
	JA LOOP2
	CMP CX,1
	JA LOOP1
	RET
DELAY ENDP
CLEAR PROC NEAR
	MOV AX,0600H	;CLEAR SCREEN
	MOV BH,00H
	MOV CX,0000H
	MOV DX,1E4FH
	INT 10H
	RET
CLEAR ENDP
INTRO PROC NEAR
	CALL CLEAR
	PRINTT 1 1
	PRINTI 1 30
	PRINTC 1 55
	CALL DELAY
	PRINTT 12 1
	PRINTA 12 30
	PRINTC 12 55
	CALL DELAY
	CALL CLEAR
	PRINTT 6 1
	PRINTO 6 26
	PRINTE 6 53
	CALL DELAY
	CALL CLEAR
	RET
INTRO ENDP
END MAIN
